version: '3.7'
services:
  database-checkout:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: postgres
      POSTGRES_DB: checkout
      TZ: America/Sao_Paulo
      PGTZ: America/Sao_Paulo
    container_name: db-checkout
    ports:
      - 5432:5432
    volumes:
      - /docker-volumes/postgresql/db-checkout:/var/lib/postgresql/data
    depends_on:
      - kafka
  database-payment:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: postgres
      POSTGRES_DB: payment
      TZ: America/Sao_Paulo
      PGTZ: America/Sao_Paulo
    container_name: db-payment
    ports:
      - 5433:5432
    volumes:
      - /docker-volumes/postgresql/db-payment:/var/lib/postgresql/data
    depends_on:
        - kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-enterprise-kafka:latest
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'      
  dio-checkout-api:
    image: jfrossetto/dio-checkout-api:latest
    container_name: dio-checkout-api
    ports:
      - 5000:5000
    depends_on:
      - database-checkout
      - schema-registry
    environment:
      POST_URL: db-checkout:5432
      POST_USER: postgres
      POST_PASS: admin
      BROKER_URL: broker:9092
      REGISTRY_URL: http://schema-registry:8081
  dio-payment-api:
    image: jfrossetto/dio-payment-api:latest
    container_name: dio-payment-api
    ports:
      - 5002:5002
    depends_on:
      - database-payment
      - schema-registry      
    environment:
      POST_URL_PAY: db-payment:5432
      POST_USER: postgres
      POST_PASS: admin
      BROKER_URL: broker:9092
      REGISTRY_URL: http://schema-registry:8081